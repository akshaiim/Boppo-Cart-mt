{"ast":null,"code":"var _jsxFileName = \"/home/akshay/Desktop/Meals-React/src/Products/ProductItems/ProductItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport classes from \"./ProductItemForm.module.css\";\nimport Input from \"../../UI/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ProductItemForm = props => {\n  _s();\n\n  const [formValidity, setFormValidity] = React.useState(true);\n  const inputRef = useRef();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredAmount = inputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setFormValidity(false);\n      return;\n    }\n\n    console.log(`${props} here`);\n    props.onAddToCart(enteredAmountNumber);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: inputRef,\n      label: \"amount\",\n      input: {\n        id: \"amount_\" + props.id,\n        type: \"number\",\n        min: \"1\",\n        max: \"5\",\n        step: \"1\",\n        defaultValue: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), !formValidity && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount(1-5).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ProductItemForm, \"h/lXSLich8vf0Qv/vsvsnxboDcI=\");\n\n_c = ProductItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductItemForm\");","map":{"version":3,"sources":["/home/akshay/Desktop/Meals-React/src/Products/ProductItems/ProductItemForm.js"],"names":["React","useRef","classes","Input","ProductItemForm","props","formValidity","setFormValidity","useState","inputRef","submitHandler","e","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","console","log","onAddToCart","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,8BAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,OAAO,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACxC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,KAAK,CAACQ,QAAN,CAAe,IAAf,CAAxC;AACA,QAAMC,QAAQ,GAAGR,MAAM,EAAvB;;AAEA,QAAMS,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,aAAa,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,KAAvC;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B;;AACA,QACEA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IACAF,mBAAmB,GAAG,CADtB,IAEAA,mBAAmB,GAAG,CAHxB,EAIE;AACAT,MAAAA,eAAe,CAAC,KAAD,CAAf;AACA;AACD;;AACDY,IAAAA,OAAO,CAACC,GAAR,CAAa,GAAEf,KAAM,OAArB;AACAA,IAAAA,KAAK,CAACgB,WAAN,CAAkBL,mBAAlB;AACD,GAdD;;AAgBA,sBACE;AAAM,IAAA,SAAS,EAAEd,OAAO,CAACoB,IAAzB;AAA+B,IAAA,QAAQ,EAAEZ,aAAzC;AAAA,4BACE,QAAC,KAAD;AACE,MAAA,GAAG,EAAED,QADP;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAE;AACLc,QAAAA,EAAE,EAAE,YAAYlB,KAAK,CAACkB,EADjB;AAELC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,GAAG,EAAE,GAHA;AAILC,QAAAA,GAAG,EAAE,GAJA;AAKLC,QAAAA,IAAI,EAAE,GALD;AAMLC,QAAAA,YAAY,EAAE;AANT;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,EAeG,CAACtB,YAAD,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfpB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAvCM;;GAAMF,e;;KAAAA,e","sourcesContent":["import React from \"react\";\nimport { useRef } from \"react\";\nimport classes from \"./ProductItemForm.module.css\";\nimport Input from \"../../UI/Input\";\n\nexport const ProductItemForm = (props) => {\n  const [formValidity, setFormValidity] = React.useState(true);\n  const inputRef = useRef();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const enteredAmount = inputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n    if (\n      enteredAmount.trim().length === 0 ||\n      enteredAmountNumber < 1 ||\n      enteredAmountNumber > 5\n    ) {\n      setFormValidity(false);\n      return;\n    }\n    console.log(`${props} here`);\n    props.onAddToCart(enteredAmountNumber);\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <Input\n        ref={inputRef}\n        label=\"amount\"\n        input={{\n          id: \"amount_\" + props.id,\n          type: \"number\",\n          min: \"1\",\n          max: \"5\",\n          step: \"1\",\n          defaultValue: 1,\n        }}\n      />\n\n      <button>+ Add</button>\n      {!formValidity && <p>Please enter a valid amount(1-5).</p>}\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}