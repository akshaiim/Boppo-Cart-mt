{"ast":null,"code":"var _jsxFileName = \"/home/akshay/Desktop/Meals-React/src/Meals/MealItems/MealItemForm.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useRef } from \"react\";\nimport classes from \"./MealItemForm.module.css\";\nimport Input from \"../../UI/Input\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const MealItemForm = () => {\n  _s();\n\n  const [formValidity, setFormValidity] = React.useState(true);\n  const inputRef = useRef();\n\n  const submitHandler = e => {\n    e.preventDefault();\n    const enteredAmount = inputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n\n    if (enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5) {\n      setFormValidity(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.form,\n    onSubmit: submitHandler,\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      ref: inputRef,\n      label: \"amount\",\n      input: {\n        id: \"amount\",\n        type: \"number\",\n        min: \"1\",\n        max: \"5\",\n        step: \"1\",\n        defaultValue: 1\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"+ Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), !formValidity && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Please enter a valid amount(1-5).\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MealItemForm, \"h/lXSLich8vf0Qv/vsvsnxboDcI=\");\n\n_c = MealItemForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MealItemForm\");","map":{"version":3,"sources":["/home/akshay/Desktop/Meals-React/src/Meals/MealItems/MealItemForm.js"],"names":["React","useRef","classes","Input","MealItemForm","formValidity","setFormValidity","useState","inputRef","submitHandler","e","preventDefault","enteredAmount","current","value","enteredAmountNumber","trim","length","form","id","type","min","max","step","defaultValue"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,QAAqB,OAArB;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,KAAP,MAAkB,gBAAlB;;AAEA,OAAO,MAAMC,YAAY,GAAG,MAAM;AAAA;;AAChC,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,KAAK,CAACO,QAAN,CAAe,IAAf,CAAxC;AACA,QAAMC,QAAQ,GAAGP,MAAM,EAAvB;;AAEA,QAAMQ,aAAa,GAAIC,CAAD,IAAO;AAC3BA,IAAAA,CAAC,CAACC,cAAF;AACA,UAAMC,aAAa,GAAGJ,QAAQ,CAACK,OAAT,CAAiBC,KAAvC;AACA,UAAMC,mBAAmB,GAAG,CAACH,aAA7B;;AACA,QAAGA,aAAa,CAACI,IAAd,GAAqBC,MAArB,KAAgC,CAAhC,IAAqCF,mBAAmB,GAAG,CAA3D,IAAgEA,mBAAmB,GAAG,CAAzF,EAA2F;AACzFT,MAAAA,eAAe,CAAC,KAAD,CAAf;AACD;AAKF,GAXD;;AAcA,sBACE;AAAM,IAAA,SAAS,EAAEJ,OAAO,CAACgB,IAAzB;AAA+B,IAAA,QAAQ,EAAET,aAAzC;AAAA,4BACE,QAAC,KAAD;AACA,MAAA,GAAG,EAAED,QADL;AAEE,MAAA,KAAK,EAAC,QAFR;AAGE,MAAA,KAAK,EAAE;AACLW,QAAAA,EAAE,EAAE,QADC;AAELC,QAAAA,IAAI,EAAE,QAFD;AAGLC,QAAAA,GAAG,EAAE,GAHA;AAILC,QAAAA,GAAG,EAAE,GAJA;AAKLC,QAAAA,IAAI,EAAE,GALD;AAMLC,QAAAA,YAAY,EAAE;AANT;AAHT;AAAA;AAAA;AAAA;AAAA,YADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF,EAeI,CAACnB,YAAD,iBAAiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAfrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CArCM;;GAAMD,Y;;KAAAA,Y","sourcesContent":["import React from \"react\";\nimport {useRef} from \"react\"\nimport classes from \"./MealItemForm.module.css\";\nimport Input from \"../../UI/Input\";\n\nexport const MealItemForm = () => {\n  const [formValidity, setFormValidity] = React.useState(true);\n  const inputRef = useRef();\n\n  const submitHandler = (e) => {\n    e.preventDefault();\n    const enteredAmount = inputRef.current.value;\n    const enteredAmountNumber = +enteredAmount;\n    if(enteredAmount.trim().length === 0 || enteredAmountNumber < 1 || enteredAmountNumber > 5){\n      setFormValidity(false)\n    }\n    \n    \n\n\n  }\n\n\n  return (\n    <form className={classes.form} onSubmit={submitHandler}>\n      <Input\n      ref={inputRef}\n        label=\"amount\"\n        input={{\n          id: \"amount\",\n          type: \"number\",\n          min: \"1\",\n          max: \"5\",\n          step: \"1\",\n          defaultValue: 1,\n        }}\n      />\n\n      <button>+ Add</button>\n      { !formValidity && <p>Please enter a valid amount(1-5).</p>}\n    </form>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}