{"ast":null,"code":"var _jsxFileName = \"/home/akshay/Desktop/Meals-React/src/store/CartContextProvider.js\",\n    _s = $RefreshSig$();\n\nimport cartCtx from \"./CartContext\";\nimport React from \"react\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type == \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAMount + action.item.price * action.item.amount;\n    return {\n      item: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultState;\n};\n\nconst ContextProvider = props => {\n  _s();\n\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultState);\n\n  const addItemToCart = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      item: item\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAMount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(cartCtx.provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ContextProvider, \"xNoVBhzo/FaQK+pVUAMBgGK+qwI=\");\n\n_c = ContextProvider;\nexport default contextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"sources":["/home/akshay/Desktop/Meals-React/src/store/CartContextProvider.js"],"names":["cartCtx","React","useReducer","defaultState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","totalAMount","price","amount","ContextProvider","props","cartState","dispatchCartAction","addItemToCart","removeItemFromCart","id","cartContext","addItem","removeItem","children","contextProvider"],"mappings":";;;AAAA,OAAOA,OAAP,MAAoB,eAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,IAAe,KAAnB,EAA0B;AACxB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GACtBN,KAAK,CAACO,WAAN,GAAoBN,MAAM,CAACI,IAAP,CAAYG,KAAZ,GAAoBP,MAAM,CAACI,IAAP,CAAYI,MADtD;AAGA,WAAO;AACLJ,MAAAA,IAAI,EAAEF,YADD;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AACD,SAAOV,YAAP;AACD,CAZD;;AAcA,MAAMc,eAAe,GAAIC,KAAD,IAAW;AAAA;;AACjC,QAAM,CAACC,SAAD,EAAYC,kBAAZ,IAAkClB,UAAU,CAACI,WAAD,EAAcH,YAAd,CAAlD;;AAEA,QAAMkB,aAAa,GAAIT,IAAD,IAAU;AAC9BQ,IAAAA,kBAAkB,CAAC;AAAEX,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMU,kBAAkB,GAAIC,EAAD,IAAQ;AACjCH,IAAAA,kBAAkB,CAAC;AAAEX,MAAAA,IAAI,EAAE,QAAR;AAAkBG,MAAAA,IAAI,EAAEA;AAAxB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMY,WAAW,GAAG;AAClBpB,IAAAA,KAAK,EAAEe,SAAS,CAACf,KADC;AAElBU,IAAAA,WAAW,EAAEK,SAAS,CAACd,WAFL;AAGlBoB,IAAAA,OAAO,EAAEJ,aAHS;AAIlBK,IAAAA,UAAU,EAAEJ;AAJM,GAApB;AAOA,sBACE,QAAC,OAAD,CAAS,QAAT;AAAkB,IAAA,KAAK,EAAEE,WAAzB;AAAA,cAAuCN,KAAK,CAACS;AAA7C;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CArBD;;GAAMV,e;;KAAAA,e;AAuBN,eAAeW,eAAf","sourcesContent":["import cartCtx from \"./CartContext\";\nimport React from \"react\"\nimport { useReducer } from \"react\";\n\nconst defaultState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type == \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount =\n      state.totalAMount + action.item.price * action.item.amount;\n\n    return {\n      item: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultState;\n};\n\nconst ContextProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultState);\n\n  const addItemToCart = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n\n  const removeItemFromCart = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", item: item });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAMount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart,\n  };\n\n  return (\n    <cartCtx.provider value={cartContext}>{props.children}</cartCtx.provider>\n  );\n};\n\nexport default contextProvider;\n"]},"metadata":{},"sourceType":"module"}