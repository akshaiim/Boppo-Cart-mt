{"ast":null,"code":"var _jsxFileName = \"/home/akshay/Desktop/Meals-React/src/store/CartProvider.js\",\n    _s = $RefreshSig$();\n\nimport CartContext from \"./CartContext\";\nimport React from \"react\";\nimport { useReducer } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultState = {\n  items: [],\n  totalAmount: 0\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount = state.totalAMount + action.item.price * action.item.amount;\n    return {\n      item: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n\n  return defaultState;\n};\n\nconst CartProvider = props => {\n  _s();\n\n  const [defaultState, dispatchCartAction] = useReducer(cartReducer, defaultState);\n  console.log(`${defaultState} yaham`);\n\n  const addItemToCart = item => {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  };\n\n  const removeItemFromCart = id => {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAMount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CartProvider, \"qiW0mW3uJm3RV+3sWO0b7ZdLakM=\");\n\n_c = CartProvider;\nexport default CartProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"sources":["/home/akshay/Desktop/Meals-React/src/store/CartProvider.js"],"names":["CartContext","React","useReducer","defaultState","items","totalAmount","cartReducer","state","action","type","updatedItems","concat","item","updatedTotalAmount","totalAMount","price","amount","CartProvider","props","dispatchCartAction","console","log","addItemToCart","removeItemFromCart","id","cartContext","cartState","addItem","removeItem","children"],"mappings":";;;AAAA,OAAOA,WAAP,MAAwB,eAAxB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,OAA3B;;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAE,EADY;AAEnBC,EAAAA,WAAW,EAAE;AAFM,CAArB;;AAKA,MAAMC,WAAW,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACrC,MAAIA,MAAM,CAACC,IAAP,KAAgB,KAApB,EAA2B;AACzB,UAAMC,YAAY,GAAGH,KAAK,CAACH,KAAN,CAAYO,MAAZ,CAAmBH,MAAM,CAACI,IAA1B,CAArB;AACA,UAAMC,kBAAkB,GACtBN,KAAK,CAACO,WAAN,GAAoBN,MAAM,CAACI,IAAP,CAAYG,KAAZ,GAAoBP,MAAM,CAACI,IAAP,CAAYI,MADtD;AAGA,WAAO;AACLJ,MAAAA,IAAI,EAAEF,YADD;AAELL,MAAAA,WAAW,EAAEQ;AAFR,KAAP;AAID;;AACD,SAAOV,YAAP;AACD,CAZD;;AAcA,MAAMc,YAAY,GAAIC,KAAD,IAAW;AAAA;;AAC9B,QAAM,CAACf,YAAD,EAAegB,kBAAf,IAAqCjB,UAAU,CAACI,WAAD,EAAcH,YAAd,CAArD;AACAiB,EAAAA,OAAO,CAACC,GAAR,CAAa,GAAElB,YAAa,QAA5B;;AAEA,QAAMmB,aAAa,GAAIV,IAAD,IAAU;AAC9BO,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,KAAR;AAAeG,MAAAA,IAAI,EAAEA;AAArB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMW,kBAAkB,GAAIC,EAAD,IAAQ;AACjCL,IAAAA,kBAAkB,CAAC;AAAEV,MAAAA,IAAI,EAAE,QAAR;AAAkBe,MAAAA,EAAE,EAAEA;AAAtB,KAAD,CAAlB;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG;AAClBrB,IAAAA,KAAK,EAAEsB,SAAS,CAACtB,KADC;AAElBU,IAAAA,WAAW,EAAEY,SAAS,CAACrB,WAFL;AAGlBsB,IAAAA,OAAO,EAAEL,aAHS;AAIlBM,IAAAA,UAAU,EAAEL;AAJM,GAApB;AAOA,sBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEE,WAA7B;AAAA,cACGP,KAAK,CAACW;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD,CAxBD;;GAAMZ,Y;;KAAAA,Y;AA0BN,eAAeA,YAAf","sourcesContent":["import CartContext from \"./CartContext\";\nimport React from \"react\";\nimport { useReducer } from \"react\";\n\nconst defaultState = {\n  items: [],\n  totalAmount: 0,\n};\n\nconst cartReducer = (state, action) => {\n  if (action.type === \"ADD\") {\n    const updatedItems = state.items.concat(action.item);\n    const updatedTotalAmount =\n      state.totalAMount + action.item.price * action.item.amount;\n\n    return {\n      item: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  return defaultState;\n};\n\nconst CartProvider = (props) => {\n  const [defaultState, dispatchCartAction] = useReducer(cartReducer, defaultState);\n  console.log(`${defaultState} yaham`)\n\n  const addItemToCart = (item) => {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  };\n\n  const removeItemFromCart = (id) => {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  };\n\n  const cartContext = {\n    items: cartState.items,\n    totalAMount: cartState.totalAmount,\n    addItem: addItemToCart,\n    removeItem: removeItemFromCart,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"]},"metadata":{},"sourceType":"module"}